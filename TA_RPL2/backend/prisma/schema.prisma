datasource db {
  provider = "postgresql" // atau "mysql", "sqlite", dll.
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id       Int       @id @default(autoincrement())
  username String    @unique
  password String
  email    String    @unique
  userType String    @default("user")
  no_hp    String?
  location String?
  orders   Order[]
  messages Message[]
  cart     Cart[]
}

model Product {
  id               Int                @id @default(autoincrement())
  name             String
  description      String
  price            Float
  image            String
  stock            Int
  sold             Int                @default(0)
  categoryId       Int
  category         Category           @relation(fields: [categoryId], references: [id])
  cartItems        CartItem[]
  OrderItem        OrderItem[]
  RecommendProduct RecommendProduct[]
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  products Product[]
}

model Cart {
  id     Int        @id @default(autoincrement())
  userId Int
  user   User       @relation(fields: [userId], references: [id])
  items  CartItem[]
}

model CartItem {
  id        Int     @id @default(autoincrement())
  productId Int
  product   Product @relation(fields: [productId], references: [id])
  cartId    Int
  cart      Cart    @relation(fields: [cartId], references: [id])
  quantity  Int
}

model Order {
  id         Int         @id @default(autoincrement())
  userId     Int
  user       User        @relation(fields: [userId], references: [id])
  total      Float
  status     String
  createdAt  DateTime    @default(now())
  orderItems OrderItem[]
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int
  order     Order   @relation(fields: [orderId], references: [id])
  productId Int
  product   Product @relation(fields: [productId], references: [id])
  quantity  Int
}

model Message {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  receivedAt  DateTime @default(now())
  userId      Int
  user        User     @relation(fields: [userId], references: [id])
}

model RecommendProduct {
  id        Int      @id @default(autoincrement())
  productId Int
  product   Product  @relation(fields: [productId], references: [id])
  createdAt DateTime @default(now())
}
